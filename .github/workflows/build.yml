name: IntelliJ Plugin Build
on:
  pull_request:
  push:
    branches:
      - main
  workflow_call:

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare environment
        uses: actions/setup-java@v4
        with:
          java-version: 17
          cache: 'gradle'
          distribution: 'temurin'

      # required since test report action uses git
      - name: Configure Git Safe Directory
        run: |
          REPO_NAME=$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f2)
          git config --global --add safe.directory "/__w/$REPO_NAME/$REPO_NAME"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Create .npmrc
        working-directory: lsp
        run: echo -e "@lstreckeisen:registry=https://npm.pkg.github.com\n//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: Plugin Linting
        run: ./gradlew ktlintCheck

      - name: Plugin Tests
        run: ./gradlew test

      - name: Plugin Test Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Plugin Test Results
          path: build/test-results/test/TEST-*.xml
          reporter: java-junit

      - name: Build plugin
        run: ./gradlew buildPlugin

      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@v2024.3
        with:
          pr-mode: false
          args: --baseline,qodana.serif.json,--fail-threshold,2
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN_1103458822 }}
          QODANA_ENDPOINT: 'https://qodana.cloud'

      - name: Upload plugin artifact
        uses: actions/upload-artifact@v4
        with:
          name: context-mapper-intellij-plugin
          path: ./build/distributions/context-mapper-intellij-plugin.zip
